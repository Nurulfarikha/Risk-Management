GARCH MODEL

#Residual The Best ARMA Model
res.arma.brpt1<-arma.BRPT1$residuals
res.arma.brpt2<-arma.BRPT2$residuals
res.arma.icbp1<-arma.ICBP1$residuals
res.arma.icbp2<-arma.ICBP2$residuals

#Heteroskedasticity Test
library(FinTS)
ArchTest(res.arma.brpt1,lags = 7)
ArchTest(res.arma.brpt2,lags = 7)
ArchTest(res.arma.icbp1,lags = 7)
ArchTest(res.arma.icbp2,lags = 7)

#GARCH Model
library(rugarch)
library(fGarch)
#BRPT1
specgarch.BRPT1<-ugarchspec(variance.model = list(model="sGARCH",garchOrder=c(1,1)),mean.model = list(armaOrder=c(1,0),include.mean=F),distribution.model="snorm")
garch.BRPT1<-ugarchfit(specgarch.BRPT1,data=BRPT1$Return)
garch.BRPT1
#BRPT2
specgarch.BRPT2<-ugarchspec(variance.model = list(model="sGARCH",garchOrder=c(1,1)),mean.model = list(armaOrder=c(3,3),include.mean=F),distribution.model="snorm")
garch.BRPT2<-ugarchfit(specgarch.BRPT2,data=BRPT2$Return[1:734])
garch.BRPT2
#ICBP1
specgarch.ICBP1<-ugarchspec(variance.model = list(model="eGARCH",garchOrder=c(1,1)),mean.model = list(armaOrder=c(1,1),include.mean=F),distribution.model="snorm")
garch.ICBP1<-ugarchfit(specgarch.ICBP1,data=ICBP1$Return)
garch.ICBP1
#ICBP2
specgarch.ICBP2<-ugarchspec(variance.model = list(model="sGARCH",garchOrder=c(1,1)),mean.model = list(armaOrder=c(1,1),include.mean=F),distribution.model="snorm")
garch.ICBP2<-ugarchfit(specgarch.ICBP2,data=ICBP2$Return[1:734])
garch.ICBP2

#Normality Test of residual Garch
library(readxl)
res.garch1<-read_excel("D:/KULIAH/MATERI KULIAH/materi kulon/skripsi/bismillah/data2/resG1.xlsx")
res.garch2<-read_excel("D:/KULIAH/MATERI KULIAH/materi kulon/skripsi/bismillah/data2/resG2.xlsx")
resG1<-as.matrix(res.garch1)
resG2<-as.matrix(res.garch2)

#Normality test of Residual GARCH
jarque.bera.test(res.garch1$res.brpt1)
jarque.bera.test(res.garch2$res.brpt2)
jarque.bera.test(res.garch1$res.icbp1)
jarque.bera.test(res.garch2$res.icbp2)

#Dependency Measure
library(copula)
library(QRM)
ro.kendall1<-Kendall(resG1)
ro.kendall1<-ro.kendall1[1,2]
ro.kendall1
ro.kendall2<-Kendall(resG2)
ro.kendall2<-ro.kendall2[1,2]
ro.kendall2

#Uniform Transformation
pseudo1<-cbind(pobs(res.garch1$res.brpt1),pobs(res.garch1$res.icbp1))
pseudo2<-cbind(pobs(res.garch2$res.brpt2),pobs(res.garch2$res.icbp2))
plot(pseudo2[,1],pseudo2[,2],xlab="BRPT saat Cov-19",ylab="ICBP saat Cov-19",col="blue")
#Copula
#Fit Copula
#Sebelum Covid19
#Copula Gumbel
parGumbel1<-1/(1-ro.kendall1)
gumbel<-gumbelCopula(parGumbel1,dim=2)
fitgumbel1<-fitCopula(gumbel,pseudo1,method="ml")
gumbel.copula1<-gumbelCopula(fitgumbel1@estimate,dim = 2)
summary(fitgumbel1)
#Copula Clayton
parClayton1<-(2*ro.kendall1)/(1-ro.kendall1)
clayton<-claytonCopula(parClayton1,dim=2)
fitclayton1<-fitCopula(clayton,pseudo1,method="ml")
clayton.copula1<-claytonCopula(fitclayton1@estimate,dim = 2)
summary(fitclayton1)
#Copula Frank
frank<-frankCopula(param = NA_real_,dim=2)
fitfrank1<-fitCopula(frank,pseudo1,method="ml")
frank.copula1<-frankCopula(fitfrank1@estimate,dim = 2)
summary(fitfrank1)

#Saat Covid19
#Copula Gumbel
parGumbel2<-1/(1-ro.kendall2)
gumbel2<-gumbelCopula(parGumbel2,dim=2)
fitgumbel2<-fitCopula(gumbel2,pseudo2,method="ml")
gumbel.copula2<-gumbelCopula(fitgumbel2@estimate,dim = 2)
summary(fitgumbel2)
#Copula Clayton
parClayton2<-(2*ro.kendall2)/(1-ro.kendall2)
clayton2<-claytonCopula(parClayton2,dim=2)
fitclayton2<-fitCopula(clayton2,pseudo2,method="ml")
clayton.copula2<-claytonCopula(fitclayton2@estimate,dim = 2)
summary(fitclayton2)
#Copula Frank
frank2<-frankCopula(param = NA_real_,dim=2)
fitfrank2<-fitCopula(frank2,pseudo2,method="ml")
frank.copula2<-frankCopula(fitfrank2@estimate,dim = 2)
summary(fitfrank2)

#Copula Model Sebelum Covid 19
n<-815
Rfrank1<-rCopula(n,frank.copula1)
resG1.a<-as.matrix(res.garch1$res.brpt1)
resG1.b<-as.matrix(res.garch1$res.icbp1)
r<-100
N=815-r
a<-matrix(0,r,N)
b<-matrix(0,r,N)
VaRf1<-matrix(0,r,1)
for(i in 1:r){
  t=1+i
  u=N+i
  a[i,]=resG1.a[t:u]
  b[i,]=resG1.b[t:u]
  sim.valF.BRPT1<-quantile(a[i,],Rfrank1[,1])
  sim.valF.icbp1<-quantile(b[i,],Rfrank1[,2])
  RetF.p1<-(0.25*sim.valF.BRPT1)+(0.75*sim.valF.icbp1)
  RetF.p1<-as.matrix(RetF.p1)
  VaRf1[i]<-quantile(RetF.p1,0.05)
}
mean(VaRf1)
VaRf1<-abs(VaRf1)
RetF.p1<-abs(RetF.p1)
a<-exception(VaRf1,RetF.p1)
LRuc(a,0.05)

#Copula Model Saat Covid 19
n<-734
Rclayton2<-rCopula(n,clayton.copula2)
resG2.a<-res.garch2$res.brpt2
resG2.b<-res.garch2$res.icbp2
N=734-100
r<-100
a<-matrix(0,r,N)
b<-matrix(0,r,N)
VaRC2<-matrix(0,r,1)
for(i in 1:r){
  t=1+i
  u=N+i
  a[i,]=resG2.a[t:u]
  b[i,]=resG2.b[t:u]
  sim.valC.BRPT2<-quantile(a[i,],Rclayton2[,1])
  sim.valC.icbp2<-quantile(b[i,],Rclayton2[,2])
  RetC.p2<-(0.1*sim.valC.BRPT2)+(0.9*sim.valC.icbp2)
  RetC.p2<-as.matrix(RetC.p2)
  VaRC2[i]<-quantile(RetC.p2,0.05)
}
mean(VaRC2)
VaRC2<-abs(VaRC2)
RetC.p2<-abs(RetC.p2)
a<-exception(VaRC2,RetC.p2)
LRuc(a,0.05)
#Backtesting
#Backtesting VaR Copula Gumbel sebelum covid
exception<-function(VaR,returns){
  output<-vector(mode = "numeric",length = length(VaR))
  for(i in seq(length(VaR))){
    if(returns[i]>VaR[i]){
      output[i]=returns[i]
    }
  }
  return(output)
}
LRuc<-function(except,alpha){
  n<-length(except)
  m<-sum(except!=0)
  LR = 2 * log  ((1 - m/n)^(n - m) * (m/n)^m) - 2 * log((1 - alpha)^(n - m) * alpha^m)  
  
  return (LR)
}

